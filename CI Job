Developers write and commit new version of the application in github

>Jenkins--Docker integration fintech Project:
  4 weeks
    stages||steps:
      1. git clone  ------- git latest code / NewVersion
      2A. mvn test -------- Test + Build
      2B. mvn package -------  Build (war)
      3. codeQality ------- codeQality report
      4. upLoadArtifacts-------  backupArtifacts
      (to get Nexu password)     docker exec nexus  cat /nexus-data/admin.password 
           vi tools/hudson.tasks.Maven_MavenInstallation/maven3.8.4/conf/settings.xml
           
           ><Build + Release Stage Completed> (B&R Engr)

      5. docker build -------  build docker images 
      6. docker push ------- push image to Registry (dockerhub)
                               ECR / Nexus/JFrog
      7. docker run -------  deploy application as docker container
      8. Email notification// 100.24.52.91:8080 
 


In Jenkins, we add automation to the process by adding ***** (to pull every minute) or
H**** (to pull every hour) to the ebay-ci project configuration Build Triggers in Poll SCM.

>1. Continuous Integration CI Job: (CORRECT)

 //Declarative  
https://github.com/LandmakTechnology/maven-web-application
pipeline{
	agent any
	tools{
	 maven "maven3.8.4"
	}
    stages{
      stage('GitClone'){
        steps{
          sh  "echo cloning the latest applications version"
          git "https://github.com/LandmakTechnology/maven-web-application"
        }
      }
      stage('TestBuild'){
        steps{
          sh  "echo Running unitTesting"
          sh  "echo unitTesting ok. Creating packages"
          sh  "mvn clean package"
          sh  "echo Artifacts created"   
        }
      }
      stage('CodeQuality'){
        steps{
          sh  "echo Running codeQality report"
          sh  "docker run -d -p"
            // For Jenkins to create/start a SonarQube container in docker,\
            //  jenkins@docker:~$ docker run --name sonar -d -p 5000:9000 sonarqube
          sh  "mvn sonar:sonar"
        }
      }
      stage('upLoadArtifacts'){
        steps{
          sh  "echo upLoadArtifacts into nexus"
              // For Jenkins to create/start a Nexus container in docker,\
              // We 1st get and pull nexus image from dockerHub
              // jenkins@docker:~$ docker pull sonatype/nexus3
             // then jenkins@docker:~$ docker run --name nexus -d -p 4000:8081 sonatype/nexus3
          sh  "mvn deploy"        
        }
      }
      stage('message'){
        steps{
          sh "echo CI job successful"        
        }
      }
      stage('predeployment'){
        steps{
          sh "docker build -t mylandmarktech/maven-web-app . "
          //sh "docker login -u mylandmarktech"
          sh "docker push mylandmarktech/maven-web-app"
        }
      } 
    }
}
