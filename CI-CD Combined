3. Combined CI-CD JobS: (CORRECT)


pipeline{
  agent any
  tools{
   maven "maven3.8.4"
  }
    stages{
      stage('GitClone'){
        steps{
          sh  "echo cloning the latest applications version"
          git "https://github.com/LandmakTechnology/maven-web-application"
        }
      }
      stage('TestBuild'){
        steps{
          sh  "echo Running unitTesting"
          sh  "echo unitTesting ok. Creating packages"
          sh  "mvn clean package"
          sh  "echo Artifacts created"   
        }
      }
      stage('CodeQuality'){
        steps{
          sh  "echo Running codeQality report"
          sh  "docker run -d -p"
            // For Jenkins to create/start a SonarQube container in docker,\
            //  jenkins@docker:~$ docker run --name sonar -d -p 5000:9000 sonarqube
          sh  "mvn sonar:sonar"
        }
      }
      stage('upLoadArtifacts'){
        steps{
          sh  "echo upLoadArtifacts into nexus"
              // For Jenkins to create/start a Nexus container in docker,\
              // We 1st get and pull nexus image from dockerHub
              // jenkins@docker:~$ docker pull sonatype/nexus3
             // then jenkins@docker:~$ docker run --name nexus -d -p 4000:8081 sonatype/nexus3
          sh  "mvn deploy"        
        }
      }
      stage('CI message'){
        steps{
          sh "echo CI job successful"        
        }
      }
      stage('predeployment'){
        steps{
          sh "docker build -t mylandmarktech/maven-web-app . "
          //sh "docker login -u mylandmarktech"
          sh "docker push mylandmarktech/maven-web-app"
        }
      }
      stage('UnDeploy'){
        steps{
          sh "echo UNDEPLOYING existing application"
          sh "docker rm -f webapp"
        }
      }
      stage('deployment'){
        steps{
          sh "echo application ready for deployment"
          sh "docker run -d -p 8000:8080 --name webapp mylandmarktech/maven-web-app"
        }
      }
      stage('emailNotification'){
        steps{
          sh "echo deployment successful"
        }
      } 
    }
}
